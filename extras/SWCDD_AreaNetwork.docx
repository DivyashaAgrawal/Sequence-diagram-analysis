

SW Concept and Design Description

AreaNetwork

	
	
Author(s):	Ralf Prenzel CM-CI3/ESW
 
 

Table of content
1	Purpose of this Document	5
2	Introduction to the subsystem	5
3	List of terms and abbreviations	8
4	Requirements and Use Cases	8
4.1	Requirements	8
4.1.1	Overall Wifi Requirements	9
4.1.1.1	Wifi Chip	9
4.1.1.2	Update	9
4.1.1.3	Country setting	9
4.1.1.4	General setting	10
4.1.2	WLAN Access Point	10
4.1.2.1	AP Country setting	10
4.1.2.2	AP Channel selection	11
4.1.2.3	AP WLAN security	11
4.1.2.4	AP WLAN MAC filtering	11
4.1.3	WLAN client	12
4.1.3.1	Client country setting	12
4.1.3.2	Client IP address setting	12
4.1.3.3	Client security	13
4.1.4	System Requirements	13
4.1.4.1	TopasII component	13
4.1.4.2	Diagnosis Requirements	13
4.1.4.3	Diagnosis Trouble Codes	14
4.1.4.4	Shutdown Requirements	14
4.1.4.5	Thermal behaviour Requirements	15
4.1.5	Non-Functional Requirements	15
4.2	Use cases	15
4.2.1	Use case DHCP client and server	15
5	High Level Design	18
5.1	Static Software Architecture and Deployment to Domains	18
5.1.1.1	Topas Diagnosis Design for areanetwork	20
5.1.2	Analyzed Alternatives	22
5.2	Provided Interfaces / User Handbook	22
5.3	Dynamic design on high level	22
5.3.1	Start up sequence	22
5.3.2	Shutdown Sequence	23
5.3.3	Start Access Point Sequence	24
5.3.4	Stop Access point	25
5.3.5	Start Wifi Client	26
5.3.6	Activate MAC Filter	27
5.3.7	Deactivate MAC Filter	27
5.3.8	Start DHCP server	29
5.3.9	Start DHCP client	30
5.3.10	Start Wifi Client with fixed IP address	31
5.4	Diagnosis	31
5.4.1	Marvell driver version	31
5.4.2	Possible requests if AreaNetwork Topas component is present	32
5.4.3	Possible requests if AreaNetwork Topas component is NOT present in project	32
6	Detailed Design	34
6.1	Analyzed Alternatives	34
6.2	Mechanisms and algorithms	34
6.3	Dynamic Design on detail level	34
6.4	Concurrency / Threading Model	34
6.5	Data Model View	34
6.5.1	Storage Mechanism	35
6.5.1.1	Migration of Data Structures / Error Handling	35
6.5.1.2	Set to delivery state	35
6.5.2	Data list	35
6.5.3	Configuration	35
6.6	Critical Computer Resources (CPU, RAM, Flash)	36
6.7	Install View	36
6.8	Security User and Groups	36
7	Testing & Debugging	36
7.1.1	Verification criteria for Wifi Requirements	36
7.1.1.1	Wifi Chip	36
7.1.1.2	Update	37
7.1.1.3	Country setting	37
7.1.1.4	General setting	37
7.1.2	WLAN Access Point	38
7.1.2.1	AP Country setting	38
7.1.2.2	AP Channel selection	39
7.1.2.3	AP WLAN security	39
7.1.2.4	AP MAC filtering	39
7.1.3	WLAN client	40
7.1.3.1	Client country setting	40
7.1.3.2	Client IP address setting	40
7.1.3.3	Client security	41
7.1.4	System Requirements	41
7.1.4.1	TopasII component	41
7.1.4.2	Diagnosis Requirements	41
7.1.4.3	Diagnosis Trouble Codes	42
7.1.4.4	Shutdown Requirements	42
7.1.4.5	Thermal behaviour Requirements	42
7.1.5	Non-Functional Requirements	43
8	Requirements to other components	43
9	Source code reference	43
10	References and related documents	43
11	Contacts	44
12	Amendments	44
12.1	Revision history	44


Each chapter includes “hidden text” to guideline the author. 
If it is not shown, activate “hidden text” in the Word options.
This hint shall be deleted when the document will be released.
 
1	Purpose of this Document
This document is used to record results of architecture and design activities for <add SW module or subsystem name>. The document contains both the high level as well as the detailed design. It describes the behavior and how the SW interact with the remaining system.
The document shows how the SW part will be arranged to satisfy the requirements and guide the developers for the implementation and maintenance phases. It provides also an understanding, which kinds of requirements are related to which design entities (such like SW components or modules).
2	Introduction to the subsystem

The Topas component areanetwork is part of the TOPAS platform providing an interface for applications running on the CTP target. A speciality of CTP is that there’s an additional interface DTSI designed by the customer on top of the TOPAS framework (platform) interface.
 

Figure 1: Architecture overview of CTP includes iMX6 (linux) processor and V850 processor part
In Figure 1 the main design is shown without details about Wifi and BT.

The Topas framework includes the TOPAS components
-	SystemManager & HAL
-	SelfDiagnosis
-	VehicleNetwork (CAN communication)
-	Positioning
-	Wifi (area network) – not shown as block
-	Bt_Service  – not shown as block
-	Modem (gsm component)  – not shown as block


In the next figure the main design is updated with focus on Wifi and BT and all components needed for.

 
Figure 2: Design overview for BT,Wifi in Topas2

The ALPS Wifi/BT module is connected to iMX6 
-	SDIO for Wifi
-	UART for BT 
-	I2S for BT audio
-	Reset line 

The ALPS Wifi/BT module is connected to V850
-	an IRQ out line for BT wake up feature. 
This IRQ line is connected to one V850 wake up pin where 2 further wake up lines (GSM and RTC) are connected to. To distinguish which line has woken up the V850 2 flip flops (BT and GSM) are introduced which could be read after V850 has been started up.

The ALPS module has 3 antenna connectors from which the BT (2.4GHz) and Wifi (2.4GHz) output is connected to the antenna line. 5GHz Wifi antenna is not supported.

To test if the antenna is connected a test line is available from V850 to the antenna port. The antenna state could be retrieved via INC (inter node communication between iMX6 and V850).

3	List of terms and abbreviations
Term or Abbreviation	Description
Component Model	In the IEEE standard 1026-1998 the component model is called the decomposition view and in RUP it is called the logical view.
Design Pattern	General approach to solve a common design problem, e.g. observer pattern. A design pattern consists of a problem statement, a solution and consequences (pros and cons). 
Dynamic Model	A set of classes that work together to realize a use case, also called collaboration or mechanistic design. In the IEEE standard 1026-1998 the dynamic model is called the dependency description.
IDL	Interface Definition Language
RM	Requirement Management
State Chart	State charts are a formal behavioral language. State charts are particularly effective when the use case is reactive; that is, it has inherent states (conditions) and remains in those conditions until an event of interest has occurred. A state chart is more precise and less likely to be misinterpreted than text, but it is harder to understand. Therefore it should be used together with text and sequence diagrams.
SW	Software
SWAD	Software Architecture Document
Use Case 	A use case is a named capability of a structural entity in a model. Use cases organize requirements into chunks. They help to detect open requirements. It is common for a use case to represent and organize many pages of textual requirements or dozens of usage scenarios.

4	Requirements and Use Cases
This section refers to the architecture driving requirements (functional and non functional) inside the requirement management system and derive them into use cases which are relevant for the design and will be reflected in the related chapters of the detailed design.

4.1	Requirements

In this section a collection of main requirements from current projects to Wifi are summarized and taken as basis for the TOPAS component areanetwork concept and design.


4.1.1	Overall Wifi Requirements
4.1.1.1	Wifi Chip
The Wifi Chip shall support 

No	Headline	Description
REQ_AN_1.1	Wlan access point	provide a Wlan access point
REQ_AN_1.1.1	Wlan client	provide a Wlan client
REQ_AN_1.1.2	Support of WPA2 security	Support security configuration
REQ_AN_1.1.3	Support of CCMP security	Support security configuration
REQ_AN_1.1.4	Support of 802.11b	Support Wlan profile configuration
REQ_AN_1.1.5	Support of 802.11g	Support Wlan profile configuration
REQ_AN_1.1.6	Support of 802.11n	Support Wlan profile configuration
		

4.1.1.2	Update
The Wifi software update

No	Headline	Description
REQ_AN_1.4.1	The Wifi topas component software should be updateable via SWOTA	
		

4.1.1.3	Country setting

The Wifi Access Point shall be configurable for any country

No	Headline	Description
REQ_AN_1.5.1	Wlan should support regulatories for any country  	Wlan AP or client could be configured for any country  
REQ_AN_1.5.2	Wlan AP or client should be disabled in countries where 2.4GHZ is not allowed outside (automotive)	For this the current country the car is located in has to be known.
REQ_AN_1.5.3	The country information should be based on latest information	
REQ_AN_1.5.4	The country information base should be updateable via SWOTA	Related to REQ_AN_1.4.1
		
		

4.1.1.4	General setting
No	Headline	Description
REQ_AN_1.6.1	The ip routing should block GSM tethering 	The ip routing is not part of areanetwork

4.1.2	WLAN Access Point

No	Headline	Description
REQ_AN_2.1	Target provides a Wlan access point	provide a Wlan access point, start/stop, with SSID, passphrase, and ip-address
REQ_AN_2.2.1	A default ip address should be used if ip address is not provided by application	
REQ_AN_2.2.2	If an ip address for the AP is provided by application this should be used	
REQ_AN_2.2.3	The component shall configure DHCP server correspondingly to IP address of AP. The DHCP server may be re-started.	The range of IP addresses provided via DHCP ip +1 till .254
REQ_AN_2.2.4	SSID length min 1 bytes max 254 bytes	
REQ_AN_2.2.5	Passkey length min 8 bytes, max 254 bytes	
REQ_AN_2.2.6	On shutdown stop Wlan AP	if shutdown is triggered, Wifi client and Wifi AP should be stopped always immediately.

The CTP shall provide a Wlan access point. Smartphones can connect to the CTP via Wlan and can communication via IP connection with customer applications running on CTP.
-	Secure Wifi connection using WPA2 security
-	No tethering to GSM network is planned
4.1.2.1	AP Country setting

The Wifi Access Point shall be configurable for any country

No	Headline	Description
REQ_AN_2.3	Wlan access point shall support as default country “00” to be useable world wide	Configuring of Wifi driver to use country code “00”
REQ_AN_2.3.1	Wlan access point should be able to be configured for a different country. 	Countries like “DE” should be supported. The areanetwork component haven’t to provide an interface for, if it country could be set using system commands. A restart of AP may be needed.
		

4.1.2.2	AP Channel selection
The channel of access point should be configurable. For Wifi client the channel used is dependent on the Wifi access point connected to.
For each project it has to be decided beforehand, which solution of channel selection should be used.

No	Headline	Description
REQ_AN_2.5	The Wifi channels used by access point should be configured on customer demand beforehand.	Country dependencies have to be checked.
REQ_AN_2.5.1	Wifi channels could be a fixed channel but selected ramdomly.	Configure Wifi driver to use a fixed channes, which is ramdomly selected on each start-up. Use channel of channel no’s 1,6,11.
REQ_AN_2.5.2	Wifi channels could be selected by Wifi chip using automatic channel selection	ConfigureWifi driver for automatic channel selection (Option)
		
		
		


4.1.2.3	AP WLAN security
	
No	Headline	Description
REQ_AN_2.6	WPA2 phrasekeys shall be supported.	
REQ_AN_2.6.1	The Wifi AP sw (hostapd) shall be on latest stable release 	Application has to support latest interface of Wifi AP software.
Option	Further updates of security topics	Further security features shall be possible through sw update.



4.1.2.4	AP WLAN MAC filtering
Only registered smartphone shall be able to communicate to applications 
-	Wifi MAC filtering as one security part is requested
	
No	Headline	Description
REQ_AN_2.7	Filter Wifi clients on MAC addresses	Provide possibility to configure Wifi driver for MAC filtering, add/delete MAC addresses to MAC filter. Configure Wifi AP not to allow these AMC addresses to connect.
(feature cancelled by Daimler)


Note: This use case is set to obsolete by Daimler (May 2016).

4.1.3	WLAN client

The CTP shall provide the possibility to connect to other Wlan Access points. 
-	A Wlan client has to be started on request.
-	The Wlan AP point has to be deactivated in this case. (no parallel Wlan AP and client requested)


No	Headline	Description
REQ_AN_3.1	Target provides a Wlan client	provide a Wlan access point, start/stop, with SSID, passphrase, and ip-address
REQ_AN_3.1.2	SSID length min 1 bytes max 254 bytes	
REQ_AN_3.1.3	Passkey length min 8 bytes, max 254 bytes	
		

4.1.3.1	Client country setting

The Wifi Client is dependend on countries.

No	Headline	Description
REQ_AN_3.2	Wifi client: Wifi channels should be automatically taken over from connected Wifi access point	Configure Wifi driver for automatic channel take over (standard use case)
REQ_AN_3.2.1	Wifi client: Pre-discussions with customer.
If the access point is not trustable, the country code used by Wifi client is set by application. Provide the possibility and configure Wifi client correspondingly.	Configure Wifi driver for specific country. 
REQ_AN_3.2.2	The Wifi Client shall be configurable for any country	Configure Wifi driver for specific country
		
		
		

4.1.3.2	Client IP address setting
It should be possible to configure the IP address of Wifi Client or Wifi server.

No	Headline	Description
REQ_AN_3.3	The IP address of the Wifi client can be configured as static	IP address can be set via application interface. The IP address should be set static.
REQ_AN_3.3.1	Dynamic IP address could be set	If there’s no IP address provided by application, the IP address should be received by DHCP client. DHCP client has to be started or reset.
REQ_AN_3.3.2	Check IP address range IPv4	Length should be correct.
REQ_AN_3.3.3	IP address type IPv6 should be supported as option	
		
		


4.1.3.3	Client security
	
No	Headline	Description
REQ_AN_3.4	WPA2 phrasekeys shall be supported.	
REQ_AN_3.4.1	The Wifi Client sw (wpa_supplicant) shall be on latest stable release 	Application has to support latest interface of Wifi client software.
REQ_AN_3.4.2	Further updates of security topics	Further security features shall be possible through sw update.

.
4.1.4	System Requirements
4.1.4.1	TopasII component
No	Headline	Description
REQ_AN_4.1	The application shall be an TopasII component	
REQ_AN_4.1.1	The application interface shall be an ASF interface	
REQ_AN_4.1.2	The component shall be stable and re-startable if possible	

4.1.4.2	Diagnosis Requirements
Diagnosis requests and trouble code settings are described here. 

No	Headline	Description
REQ_AN_4.2	Provide MAC address 	The MAC address should be provided on diagnosis request
REQ_AN_4.2.1	Firmware version	The firmware version should be provided on diagnosis request
REQ_AN_4.2.2	Antenna status	Provide antenna status (open, connected, short)
REQ_AN_4.2.3	Specific interface	A specific interface shall be used for diagnosis requests.
	Wifi signaling test	Wifi signaling test should be provided on diagnosis request

		
		

4.1.4.3	Diagnosis Trouble Codes
Diagnosis requests and trouble code settings are described here.

No	Headline	Description
REQ_AN_4.3	Trouble codes	The component shall provide trouble codes (ITC) to Topas_diagnosis. Disable ITC if available again. ITC should not been send twice. Remember ITC permanently.
REQ_AN_4.3.1	Trouble code on driver not present	ITC shall be send if wlan driver is not available. 
REQ_AN_4.3.2	Trouble code on antenna not present	ITC shall be send if wlan/BT antenna is not available.
		


4.1.4.4	Shutdown Requirements
Shutdown requests. 

No	Headline	Description
REQ_AN_4.4	Shutdown call, stop Client or access point	
REQ_AN_4.4.1	Critical shutdown call, stop Client or access point	Goal is to do any critical tasks (like store if any data required for next startup) in case of CRITICAL_SHUTDOWN state. Basically component has to go down as soon as possible.


4.1.4.5	Thermal behaviour Requirements
Thermal behaviour requests. 

No	Headline	Description
REQ_AN_5.1	Thermal behaviour	The working temperature of ALPS chip is defined to work in -40^C < T < 80°C. The iMX6 and v850/RH850 is working at higher temperatures.
The application should trigger the power off of ALPS chip and it should be able to trigger power on again. 

REQ_AN_5.1.1	Critical shutdown call, stop Client or access point	The firmware version should be provided on diagnosis request

4.1.5	Non-Functional Requirements

No	Headline	Description
REQ_AN_6.1	The application shall be running 3 months without stopping	
REQ_AN_6.1.1	The log file size shall not fill complete file disk during running for 3 months	
		




4.2	Use cases
Description of all major use cases derived from the requirements and Design Quality Attributes. The use cases will be referenced in later chapters of this document (e.g. Dynamic ) and can be used as input for test specifications.

4.2.1	Use case DHCP client and server

IF Wifi server is started the Wifi clients could have their own IP addresses set by themselves or get an ip address provide by the server. That’s DHCP server is for. In DHPC server configuration the IP address range provided to the Wifi clients has to be set. 

If DNS should be supported too, a DNS server has to be started and configured.

If Wifi client is started the IP address could be retrieve form Wifi Ap by using DHCP client, or an static IP address could be set.
 
Figure 3: Use Cases of DHCP client and server

5	High Level Design
5.1	Static Software Architecture and Deployment to Domains
This section defines the component model and layers of this module or subsystem including deployment to the functional domains of the generic SW architecture. It introduces the significant parts of the design model and shows the dependencies on other subsystems and system parts.

 
Figure 4: AreaNetwork design overview

Areanetwork is a TOPAS component providing two types of interfaces.
-	Areanetwork API – Topas2 ASF interface of areanetwrk
-	Areanetwork_diagAPI – Topas2 basis class interface for diagnosis requests (string based)

These interfaces are used by
-	SystemManager (controlling start/stop of Topas2 components)
-	DTSI (customer interface component)
-	Diagnosis Application (like production test appl)

Areanetwork is using the following applications
-	Hostapd – OOS application for Wifi AP
-	Wpa_supplicant – OOS application for Wifi Client
-	Dnsmasq – OOS application for DNS and DHCP server
-	Udclient or dhclient – OOS application for DHCP client
-	Crda – OOS application for country handling of Wifi driver

Areanetwork is using the following Topas components
-	HAL (hardware abstraction layer) – get antenna status
-	Topas_DiagLog – set ITC codes
-	ConfigurationManager – used via DTSI for project configurations

Customer Application is configuring IP firewall
-	Iptables – OOS application for IP firewall


5.1.1.1	Topas Diagnosis Design for areanetwork

In Figure 4 the components involved in diagnosis information are shown. 
The internal trouble codes (ITC) are set by areanetwork Topas component at Topas DiagLog component. The ITC is forwarded to vd_Diaglog application where it is transferred into customer trouble code.

ITC for Wifi
1)	For ITC “wlan driver not available” the mlan0 device is checked using linux command (script).
2)	For ITC “Antenna not available (open /short)” the information is requested by areanetwork at HAL which request v850 via INC to measure the antenna state.
 
Figure 5: Topas Diagnosis design for areanetwork



5.1.2	Analyzed Alternatives


5.2	Provided Interfaces / User Handbook


5.3	Dynamic design on high level
This section describes the dynamic interactions between components or subsystems. 


5.3.1	Start up sequence 
 

5.3.2	Shutdown Sequence
 
5.3.3	Start Access Point Sequence
 
5.3.4	Stop Access point
 
5.3.5	Start Wifi Client
 
5.3.6	Activate MAC Filter
 
5.3.7	Deactivate MAC Filter
 

5.3.8	Start DHCP server
 
5.3.9	Start DHCP client
 
5.3.10	Start Wifi Client with fixed IP address
 


5.4	Diagnosis

Some of the requirements needed by diagnosis features are listed here (see section 4.1.9)
The required features are supported if Areanetwork is available and if it is not available (see native Linux support). The Antenna test current is supported by HAL only.

Req no.	Requirement	Supported by Areanetwork (via Diag interface)	Supported by native Linux	Supported by other Topas components
1	Wifi interface available (mlan0)	No, only as ITC	Yes	
2	Wifi firmware version	Yes	Yes	
3	Wifi driver version (optional)	Yes	Yes	
4	MAC address	No	Yes	CfgMgr
5	Antenna status	Yes	No	HAL
6	Antenna test current	No	no	HAL


5.4.1	Marvell driver version

Hint from Alps to get Marvell driver version
If you want to obtain the version from WiFi, you can use the following 3 methods after ugkz7 is recognized. (in the example, p64 means firmware version and C3X15C127 means driver version)

1. dmesg log
You can see the below dmesg log after ugkz7 is recognized.
[23784.037867] wlan: version = SD8887-15.68.7.p64-C3X15C127-GPL-(FP68)
 
2. iwpriv command
# iwpriv mlan0 version
mlan0 version:SD8887-15.68.7.p64-C3X15C127-GPL-(FP68)
 
3./proc/mwlan/mlanX/info
# cat /proc/mwlan/mlan0/info | grep driver_version
driver_version = SD8887-15.68.7.p64-C3X15C127-GPL-(FP68)
 
5.4.2	Possible requests if AreaNetwork Topas component is present

The Topas component areanetwork provides the topas component diagnosis interface “onCallVecDiag()”, which is a string based interface. The requests are given as string vector and the response is provided as string vector too.

Defined request strings are

Req. no	Request string	Response string	Comment
	HELP	Provide list of STRINGS supported	
2	GET_WIFI_FW_VERSION	FirmwareVersion	Marvell’s wifi firmware version
3	GET_WIFI_DRIVER_VERSION	DriverVersion	Marvell’s wifi driver version
5	GET_WIFI_ANTENNASTATE	Unknown, Connected,. Short, Short to  ground, Open, Short to VCC	Antenna state
			

Req no. 1) the mlan0 interface could be checked with “ll /sys/class/net/mlan0”
Req. no 4) the Wifi MAC address could be read from CfgMgr.
Req. no 6) The Antenna current could be requested from HAL
5.4.3	Possible requests if AreaNetwork Topas component is NOT present in project

If Areanetwork Topas component is not available, native Linux commands can be used.

Req. no	Request 	Linux command	Comment
1	Driver available?	“ll /sys/class/net/mlan0”
Or 
“ifconfig mlan0 up
ifconfig | grep mlan0”	Check if directory exists
Or

Grep for mlan0 results in output
4	Wifi MAC address	“cat /sys/class/net/mlan0/address”	E0:75:0a:ff:3c:a0
2	GET_WIFI_FW_VERSION	“cat /proc/mwlan/mlan0/info | grep driver_version”
	Driver_version = SD8887-15.68.7.p72-C3X15C147-GPL-(FP68)

3	GET_WIFI_DRIVER_VERSION	“cat /proc/mwlan/mlan0/info | grep driver_version”
	Driver_version = SD8887-15.68.7.p72-C3X15C147-GPL-(FP68)

5	GET_WIFI_ANTENNASTATE	Use HAL interface	Antenna state
6	Antenna current 	Use HAL interface	

 
6	Detailed Design
This section contains details to a level needed that all important architectural decisions are taken and the development can be started. Within this given boundaries, the developer is free to do own decisions. 
Figure 6: areanetwork detailed design basic classes


6.1	Analyzed Alternatives

6.2	Mechanisms and algorithms 

6.3	Dynamic Design on detail level
This section describes the dynamic interactions on detail level. This chapter can be skipped if the description in 4.3 Dynamic design on high level is detailed enough. 

6.4	Concurrency / Threading Model
This section describes the threading model for the SW modules. In addition, a distinction is shown which threads are started within the current process space and which processes are started separately (e.g. via fork, spawn), if any.

Thread	Process space	Started by	Description incl. concurrency issues
			

6.5	Data Model View
This section describes the used storage mechanism (e.g. SQLite DB, datapool, …) as well as the concrete files incl. path used by the SW modules. It also describes how data integrity is secured and data can be set back to factory defaults.
 
6.5.1	Storage Mechanism
This section describes the persistence mechanisms used by the subsystem incl. the error handling (e.g. incompatible data found).

SW Module	Used Storage Mechanism
	

6.5.1.1	Migration of Data Structures / Error Handling
When a system is started data structures may be incompatible due to a file system corruption (bit flips) or structure change (SW update). How this expected behavior is handled by the storage mechanism is described here.

6.5.1.2	Set to delivery state
While production test several amounts of data will be written. At the end of production a “Set to delivery” function is called. This chapter describes how the subsystem, or SW module get the trigger of “set to delivery” and which data will be reset.

6.5.2	Data list
Persistent data that is in ownership of the subsystem is listed here. “Short Description” contains a brief description. “Used persistence mechanism” is a reference to 5.5.1. “Max Size” could be a static value or a formula if it is dependent on other values defined in the requirements. The “Max Size” is a prediction at design time and shall be measured after implementation to check the correctness (see chapter 5.6 
Critical Computer Resources (CPU, RAM, Flash)). “When read and written” defines if the data is written on every change or e.g. only while shut down, etc. Default value explains which values are written during creation or Set to Delivery state. File System rights are the minimum needed access rights (e.g. for concurrent usage). ”Deletion while SW update” describes the behavior, when a SW Update is executed (e.g. file is deleted during update or not (if not, data needs to be converted by owner at next startup if needed))

Location in flash	Short description	Used persistence mechanism (see 5.5.1)
Max Size	When read and written?	Default data	File system rights	Deletion while SW update? [yes/no] 
							

6.5.3	Configuration
This section describes the configurable features/functions of the SW modules and explains the standard configuration mechanism used and the concrete values for configuring the variant. In column “Key/Value range” the key (e.g. address of KDS value) and the possible values are documented.

Configurable feature/functions	Configuration mechanism	Key / Value range	Concrete location (Flash, KDS, <file>, …)
			
 

6.6	Critical Computer Resources (CPU, RAM, Flash)
This section describes the prediction of the CPU needs, Flash and RAM of the Subsystem. 

SW Modul	CPU 
[% of one ARM 9 core)	Flash 
(see Data list)
Max RAM
[MB]	GPU Memory
[MB]
				

6.7	Install View
This section describes where the files (executables, libraries, data) of the SW module are stored in the flash file system or at other locations.

File	Directory	Description
		

6.8	Security User and Groups
All needed users and groups to implement the Multi-User-Security-Concept are listed here.

Process	User	Needed groups
		

7	Testing & Debugging
Test features (e.g. automated tests, unit tests, etc.) and special test equipment needed for testing and debugging.



7.1.1	Verification criteria for Wifi Requirements
7.1.1.1	Wifi Chip
The Wifi Chip shall support 

No	Headline	Verification
REQ_AN_1.1	Wlan access point	Start Wifi AP via interface, Wifi client should be able to connect 
REQ_AN_1.1.1	Wlan client	Start Wifi client via interface, Wifi AP should be able to connect
REQ_AN_1.1.2	Support of WPA2 security	Create a wifi AP with WPA2 and connect to AP.
REQ_AN_1.1.3	Support of CCMP security	Create a wifi AP with WPA2 and connect to AP.
REQ_AN_1.1.4	Support of 802.11b	See 11n
REQ_AN_1.1.5	Support of 802.11g	See 11n
REQ_AN_1.1.6	Support of 802.11n	Setup a Wifi IP connection. Use iperf to transmit about 11 MB/s.
		

7.1.1.2	Update
The Wifi software update

		
No	Headline	Description
		
REQ_AN_1.4.1	The Wifi topas component software should be updateable via SWOTA	Update Wifi Sw through normal sw update process defined for CTP.


7.1.1.3	Country setting


No	Headline	Verfification
REQ_AN_1.5.1	Wlan should support regulatories for any country  	EMC tests. 
REQ_AN_1.5.2	Wlan AP or client should be disabled in countries where 2.4GHZ is not allowed outside (automotive)	Done by Application starting Wifi AP, client.
REQ_AN_1.5.3	The country information should be based on latest information	Tbd.
REQ_AN_1.5.4	The country information base should be updateable via SWOTA	Update Wifi Sw through normal sw update process defined for CTP.
		
		

7.1.1.4	General setting
No	Headline	Verfification
REQ_AN_1.6.1	The ip routing should block GSM tethering 	Try to set up GSM tethering on a mobile. It should not be possible.



7.1.2	WLAN Access Point

No	Headline	Verification
REQ_AN_2.1	Target provides a Wlan access point	provide a Wlan access point, start/stop, with SSID, passphrase, and ip-address. Wifi client should be able to connect
REQ_AN_2.2.1	A default ip address should be used if ip address is not provided by application	Check ifconfig if mlan0 has the ip address set
REQ_AN_2.2.2	If an ip address for the AP is provided by application this should be used	Check ifconfig if mlan0 has the ip address set
REQ_AN_2.2.3	The component shall configure DHCP server correspondingly to IP address of AP. The DHCP server may be re-started.	Check if DHCP server is started, Wifi client gets an address in the correct IP range
REQ_AN_2.2.4	SSID length min 1 bytes max 254 bytes	Check different lengths. If not in range, an error should be reported to application
REQ_AN_2.2.5	Passkey length min 8 bytes, max 254 bytes	Check different lengths. If not in range, an error should be reported to application
REQ_AN_2.2.6	On shutdown stop Wlan AP	If shutdown is triggered, the Wifi AP should deconnect any device and should not visible any more.

7.1.2.1	AP Country setting 

No	Headline	Verification
REQ_AN_2.3	Wlan access point shall support as default country “00” to be useable world wide	“iw reg get” should show “00” after starting AP with default settings
REQ_AN_2.3.1	Wlan access point should be able to be configured for a different country as the default. 	“iw reg get” should show the specific country after starting AP with default settings
		
		
		
		

7.1.2.2	AP Channel selection

No	Headline	Verification
REQ_AN_2.5	The Wifi channels used by access point should be configured on customer demand beforehand.	Not req.
REQ_AN_2.5.1	Wifi channels could be a fixed channel but selected randomly.	Test Wifi AP more than 3 times. Wifi channels should be out of 1,6,11 only.
REQ_AN_2.5.2	Wifi channels could be selected by Wifi chip using automatic channel selection	Create radio noise on one or more Wifi channels. Start Wifi AP some times. Wifi channels should not  be selected in the channels blocked by noise.
		
		
		


7.1.2.3	AP WLAN security
	
No	Headline	Verification
REQ_AN_2.6	WPA2 phrasekeys shall be supported.	Check if Wifi client can connect with WPA2 key.
REQ_AN_2.6.1	The Wifi AP sw (hostapd) shall be on latest stable release 	Check hostapd version.
Option	Further updates of security topics	Not testable



7.1.2.4	AP MAC filtering
	
No	Headline	Description
REQ_AN_2.7	Filter Wifi clients on MAC addresses	Add MAC address via application interface to MAC filter. Start Wifi AP. Phone with this MAC addresses should refused to connect. Delete is tested opposite.
(feature cancelled by Daimler)


7.1.3	WLAN client


No	Headline	Verification
REQ_AN_3.1	Target provides a Wlan client	On start Wlan access point is visible and connectable with  SSID, passphrase, and ip-address
REQ_AN_3.1.2	SSID length min 1 bytes max 254 bytes	1-254 SSID length should be accepted, other lengths should result in error
REQ_AN_3.1.3	Passkey length min 8 bytes, max 254 bytes	8-254 pass phrase length should be accepted, other lengths should result in error
		

7.1.3.1	Client country setting


No	Headline	Verification
REQ_AN_3.2	Wifi client: Wifi channels should be automatically taken over from connected Wifi access point	Set Wifi country code of AP to “DE”. Wifi client has same country code. Stop AP, change country to “US”. Start AP. Wifi client is following.
REQ_AN_3.2.1	Wifi client: Pre-discussions with customer.
If the access point is not trustable, the country code used by Wifi client is set by application. Provide the possibility and configure Wifi client correspondingly.	Tbd.
REQ_AN_3.2.2	The Wifi Client shall be configurable for any country	Check minimum 10 different countries (once), like use “iw mlan0 info”
		
		
		


7.1.3.2	Client IP address setting

No	Headline	Verification
REQ_AN_3.3	The IP address of the Wifi client can be configured as static	IP address can be set via application interface. The IP address given should be chown in ifconfig.
REQ_AN_3.3.1	Dynamic IP address could be set	If there’s no IP address provided by application, the IP address should be received by DHCP client. DHCP client has to be started or reset. Check ifconfig
REQ_AN_3.3.2	Check IP address range IPv4	Length should be correct. An error should be returned, if ip address does not fit.
REQ_AN_3.3.3	IP address type IPv6 should be supported as option	Tdb.
		
		


7.1.3.3	Client security
	
No	Headline	Verification
REQ_AN_3.4	WPA2 phrasekeys shall be supported.	Connect to AP with WPA2 key.
REQ_AN_3.4.1	The Wifi Client sw (wpa_supplicant) shall be on latest stable release 	Check version of wpa_supplicant
REQ_AN_3.4.2	Further updates of security topics	Not testable.


7.1.4	System Requirements
7.1.4.1	TopasII component
No	Headline	Description
REQ_AN_4.1	The application shall be an TopasII component	Not testable
REQ_AN_4.1.1	The application interface shall be an ASF interface	Not testable
REQ_AN_4.1.2	The component shall be stable and re-startable if possible	Kill AN, re-start observed, functionality working again.


7.1.4.2	Diagnosis Requirements

No	Headline	Description
REQ_AN_4.2	Provide MAC address 	The MAC address should be provided on diagnosis request
REQ_AN_4.2.1	Firmware version	The firmware version should be provided on diagnosis request
REQ_AN_4.2.2	Antenna status	Provide antenna status (open, connected, short) on diagnosis request
REQ_AN_4.2.3	Specific interface	A specific interface shall be used for diagnosis requests.
REQ_AN_4.2.4	Wifi signaling test	Tested at FEP
		
		

7.1.4.3	Diagnosis Trouble Codes

No	Headline	Verification
REQ_AN_4.3	Trouble codes	Not testable
REQ_AN_4.3.1	Trouble code on driver not present	Reconfigure wifi driver so it couldn’t be loaded correctly by kernel. ITC should be set. Configure correctly again, and restart. ITC should be deleted.
REQ_AN_4.3.2	Trouble code on antenna not present	Use DTNA antenna (including 10kOhm) and confire as DTNA variant. No ITC should be set.
		


7.1.4.4	Shutdown Requirements

No	Headline	Description
REQ_AN_4.4	Shutdown call, stop Client or access point	Basically component has to go down as soon as possible.
Wifi AP or Client not available.
REQ_AN_4.4.1	Critical shutdown call, stop Client or access point	Basically component has to go down as soon as possible.
Wifi AP or Client not available.

7.1.4.5	Thermal behaviour Requirements

No	Headline	Description
REQ_AN_5.1	Thermal behaviour	The working temperature of ALPS chip is defined to work in -40^C < T < 80°C. 
Less -40°C and higher 80°C wifi AP or client should not been available and requests for should response with error.

7.1.5	Non-Functional Requirements

No	Headline	Description
REQ_AN_6.1	The application shall be running 3 months without stopping	At least test over one week stable running.
REQ_AN_6.1.1	The log file size shall not fill complete file disk during running for 3 months	Check log file size over one week test. Less <100kB, rotating file.
		



8	Requirements to other components
Requirements to other components based on architecture work within this document are listed here.
 

Component / Generic	Requirement
	
	

9	Source code reference


10	References and related documents
Link	Link	Scope
[1]	Test Specification	Document to record sensible test cases which are created with the test team.
[2]	Architecture Roadmap	If available
[3] 	Architecture model of CTP 	Dokument:	cTP_2018.eap (14,4 MB)
Ort:	Raum "Daimler_cTP_2018" / 95. Software / 07. Documentation / 01. Workpackages Documentation / Architecture

Dateibaum: https://inside-ilm.bosch.com/irj/go/nui/sid/d0583f36-da8e-3410-a58c-8ecf89b97776 
Herunterladen: https://inside-ilm.bosch.com/irj/go/nui/sid/download/d0583f36-da8e-3410-a58c-8ecf89b97776 

[4] 	Architecture Model of areanetwork	Dokument:	AreaNetwork_Design.eap (1,8 MB)
Ort:	Raum "Daimler_cTP_2018" / 95. Software / 07. Documentation / 01. Workpackages Documentation / Connectivity / Concepts

Dateibaum: https://inside-ilm.bosch.com/irj/go/nui/sid/f02fa7b2-8123-3610-68b4-9f07b933ae3f

Herunterladen: https://inside-ilm.bosch.com/irj/go/nui/sid/download/f02fa7b2-8123-3610-68b4-9f07b933ae3f

11	Contacts
List of persons who maintain this module as well as persons who should be asked for acceptance when the interface or the behavior of the module shall be changed (e.g. if a message format shall be changed) 

No	Name	Comment
		

12	Amendments
12.1	Revision history 
Update History with this button (changes history,  header and footer):       
History	22.12.2009 08:42:00	 8093			
07.12.2007			V0003	DRAFT	asdf					Baier		
Date	Version	Status	Review-Minutes	Amendments	Author
2016-06-22	0.01	Draft		First setup of areanetwork design	Ralf Prenzel CM-CI3/ESW1
2017-03-17	0.02	Draft		Add overview design description, figures and sequence charts.
Add some figures for detailed design	Ralf Prenzel CM-CI3/ESW1
2018-04-16	0.03	Draft		Update requirements
Add verrification criteria	Ralf Prenzel CM-CI3/ESW1
2018-04-16	0.04	Draft		Add 5.4 diagnosis section	Ralf Prenzel (CM-CI1/ENP1)


